<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>RhinoScript Fundamentals</title>
<link rel="StyleSheet" href="../rhinoscript.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.setRelStartPage)
	{
	addTocInfo("RhinoScript Fundamentals");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../whd_show0.gif","../whd_show2.gif","../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../whd_hide0.gif","../whd_hide2.gif","../whd_hide1.gif");

	}

	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("../index.html", "", ">", "Home", "../title.htm");
document.write("RhinoScript Fundamentals<\/p>");


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.html");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
//]]></script>
</head>

<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<h1>RhinoScript Fundamentals</h1>
<p>The RhinoScript methods library contains hundreds of easy-to-use functions 
 that perform a variety of operations on Rhino and on Rhino objects.</p>
<p>To make these methods easy-to-use, all RhinoScript method require and 
 return simple VBScript variables or VBScript Array-based data structures. 
 Thus, once you are familiar with VBScript, you will be able to use any 
 and all functions in the RhinoScript methods library.</p>
<h2>Geometry</h2>
<p>Although not required, having some understanding of the computational 
 methods used in 3-D modeling and computer graphics can be helpful when 
 using RhinoScript. A good introductory resource is the <a href="http://download.rhino3d.com/en/Rhino/4.0/EssentialMathematicsSecondEdition/" 
															 target="_blank">Essential 
 Mathematics for Computational Design</a>. This material is directed towards 
 designers who have little or no background in mathematics beyond high 
 school. And although all concepts are explained visually using Grasshopper®, 
 they are directly applicable to RhinoScript.</p>
<h2>NURBS Geometry</h2>
<p>NURBS curves and surfaces behave in similar ways and share terminology. 
 Since curves are easiest to describe, we will cover them in detail. A 
 NURBS curve is defined by four things: degree, control points, knots, 
 and an evaluation rule. </p>
<h3>Degree</h3>
<p>The degree is a positive whole number. </p>
<p>This number is usually 1, 2, 3 or 5, but can be any positive whole number. 
 NURBS lines and polylines are usually degree 1, NURBS circles are degree 
 2, and most free-form curves are degree 3 or 5. Sometimes the terms linear, 
 quadratic, cubic, and quintic are used. Linear means degree 1, quadratic 
 means degree 2, cubic means degree 3, and quintic means degree 5. </p>
<p>You may see references to the order of a NURBS curve. The order of a 
 NURBS curve is positive whole number equal to (degree+1). Consequently, 
 the degree is equal to order-1. </p>
<p>It is possible to increase the degree of a NURBS curve and not change 
 its shape. Generally, it is not possible to reduce a NURBS curve’s degree 
 without changing its shape. </p>
<h3>Control Points</h3>
<p>The control points are a list of at least degree+1 points. </p>
<p>One of easiest ways to change the shape of a NURBS curve is to move 
 its control points. </p>
<p>The control points have an associated number called a weight. With a 
 few exceptions, weights are positive numbers. When a curve’s control points 
 all have the same weight (usually 1), the curve is called non-rational, 
 otherwise the curve is called rational. The R in NURBS stands for rational 
 and indicates that a NURBS curve has the possibility of being rational. 
 In practice, most NURBS curves are non-rational. A few NURBS curves, circles 
 and ellipses being notable examples, are always rational. </p>
<h3>Knots</h3>
<p>The knots are a list of degree+N-1 numbers, where N is the number of 
 control points. Sometimes this list of numbers is called the knot vector. 
 In this term, the word vector does not mean 3-D direction. </p>
<p>This list of knot numbers must satisfy several technical conditions. 
 The standard way to ensure that the technical conditions are satisfied 
 is to require the numbers to stay the same or get larger as you go down 
 the list and to limit the number of duplicate values to no more than the 
 degree. For example, for a degree 3 NURBS curve with 11 control points, 
 the list of numbers 0,0,0,1,2,2,2,3,7,7,9,9,9 is a satisfactory list of 
 knots. The list 0,0,0,1,2,2,2,2,7,7,9,9,9 is unacceptable because there 
 are four 2s and four is larger than the degree. </p>
<p>The number of times a knot value is duplicated is called the knot’s 
 multiplicity. In the preceding example of a satisfactory list of knots, 
 the knot value 0 has multiplicity three, the knot value 1 has multiplicity 
 one, the knot value 2 has multiplicity three, the knot value 3 has multiplicity 
 one, the knot value 7 has multiplicity two, and the knot value 9 has multiplicity 
 three. A knot value is said to be a full-multiplicity knot if it is duplicated 
 degree many times. In the example, the knot values 0, 2, and 9 have full 
 multiplicity. A knot value that appears only once is called a simple knot. 
 In the example, the knot values 1 and 3 are simple knots. </p>
<p>If a list of knots starts with a full multiplicity knot, is followed 
 by simple knots, terminates with a full multiplicity knot, and the values 
 are equally spaced, then the knots are called uniform. For example, if 
 a degree 3 NURBS curve with 7 control points has knots 0,0,0,1,2,3,4,4,4, 
 then the curve has uniform knots. The knots 0,0,0,1,2,5,6,6,6 are not 
 uniform. Knots that are not uniform are called non-uniform. The N and 
 U in NURBS stand for non-uniform and indicate that the knots in a NURBS 
 curve are permitted to be non-uniform. </p>
<p>Duplicate knot values in the middle of the knot list make a NURBS curve 
 less smooth. At the extreme, a full multiplicity knot in the middle of 
 the knot list means there is a place on the NURBS curve that can be bent 
 into a sharp kink. For this reason, some designers like to add and remove 
 knots and then adjust control points to make curves have smoother or kinkier 
 shapes. Since the number of knots is equal to (N+degree-1), where N is 
 the number of control points, adding knots also adds control points and 
 removing knots removes control points. Knots can be added without changing 
 the shape of a NURBS curve. In general, removing knots will change the 
 shape of a curve. </p>
<h3>Knots and Control Points</h3>
<p>A common misconception is that each knot is paired with a control point. 
 This is true only for degree 1 NURBS (polylines). For higher degree NURBS, 
 there are groups of 2 x degree knots that correspond to groups of degree+1 
 control points. For example, suppose we have a degree 3 NURBS with 7 control 
 points and knots 0,0,0,1,2,5,8,8,8. The first four control points are 
 grouped with the first six knots. The second through fifth control points 
 are grouped with the knots 0,0,1,2,5,8. The third through sixth control 
 points are grouped with the knots 0,1,2,5,8,8. The last four control points 
 are grouped with the last six knots. </p>
<p>Some modelers that use older algorithms for NURBS evaluation require 
 two extra knot values for a total of degree+N+1 knots. When Rhino is exporting 
 and importing NURBS geometry, it automatically adds and removes these 
 two superfluous knots as the situation requires. </p>
<h3>Evaluation Rule</h3>
<p>A curve evaluation rule is a mathematical formula that takes a number 
 and assigns a point. </p>
<p>The NURBS evaluation rule is a formula that involves the degree, control 
 points, and knots. In the formula there are some things called B-spline 
 basis functions. The B and S in NURBS stand for “basis spline.” The number 
 the evaluation rule starts with is called a parameter. You can think of 
 the evaluation rule as a black box that eats a parameter and produces 
 a point location. The degree, knots, and control points determine how 
 the black box works. </p>
<h2>Scripting Fundamentals</h2>
<p>The following is designed to provide some fundamentals of RhinoScript.</p>
<p><a href="points.htm">Points</a></p>
<p><a href="arrays_of_points.htm">Arrays of Points</a></p>
<p><a href="vectors.htm">Vectors</a></p>
<p><a href="lines.htm">Lines</a></p>
<p><a href="planes.htm">Planes</a></p>
<p><a href="objects.htm">Objects</a></p>
<p>&#160;</p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
