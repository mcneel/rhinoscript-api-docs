<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>ViewDisplayModeProperty</title>
<link rel="StyleSheet" href="../rhinoscript.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.setRelStartPage)
	{
	addTocInfo("RhinoScript Methods\nView Methods\nViewDisplayModeProperty");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../whd_show0.gif","../whd_show2.gif","../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../whd_hide0.gif","../whd_hide2.gif","../whd_hide1.gif");

	}

	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("../index.html", "", ">", "Home", "../title.htm");
document.write("<a href=\"../rhinoscript_methods.htm\">RhinoScript Methods<\/a> > <a href=\"view_methods.htm\">View Methods<\/a> > ViewDisplayModeProperty<\/p>");


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.html");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
//]]></script>
</head>

<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<h1>ViewDisplayModeProperty</h1>
<p>Returns or modifies a property of a display mode. Display mode properties 
 are accessed by key/value. </p>
<p>To view all of the display mode keys, export a display mode to an INI-style 
 file using either the <a href="exportviewdisplaymode.htm">ExportViewDisplayMode</a> 
 method, or by selecting, from within Rhino, <span style="font-weight: bold;"><b>Tools 
 &gt; Options &gt; View &gt; Display Modes</b></span> and then clicking the 
 <span style="font-weight: bold;"><b>Export</b></span> button.</p>
<p>Open the resulting INI file in a text editor, such as Notepad, and you 
 will see sections of text formatted similar to that of the following:</p>
<p class="Code" style="margin-left: 12px;">...</p>
<p class="Code" style="margin-left: 12px;">[DisplayMode\aae7be23-471f-4415-816f-f424a92139c4\View 
 settings]</p>
<p class="Code" style="margin-left: 12px;">UseDocumentGrid=n</p>
<p class="Code" style="margin-left: 12px;">DrawGrid=n</p>
<p class="Code" style="margin-left: 12px;">DrawAxes=y</p>
<p class="Code" style="margin-left: 12px;">DrawZAxis=n</p>
<p class="Code" style="margin-left: 12px;">DrawWorldAxes=y</p>
<p class="Code" style="margin-left: 12px;">...</p>
<p>The first part of the section - <span style="font-family: 'Courier New', monospace; 
										 color: #000080;"><font color="navy" >Display\&lt;display_mode_id&gt;</font></span> 
 - identifies the display mode. In this example, the display mode is Wireframe. 
 This portion of the section is not used when specifying a key.</p>
<p>The remaining portion of the section is concatenated together with the 
 property name, separated by a backslash (\) character, to form the key.</p>
<p>For example, of one wanted to retrieve the <span style="font-family: 'Courier New', monospace; 
													 color: #000080;"><font color="navy" >UsesDocumentGrid</font></span> 
 property, you would specify following key:</p>
<p class="Code" style="margin-left: 12px;">Dim strKey, blnValue</p>
<p class="Code" style="margin-left: 12px;">strKey = &quot;View settings\UseDocumentGrid&quot;</p>
<p class="Code" style="margin-left: 12px;">blnValue = Rhino.ViewDisplayModeName(&quot;Wireframe&quot;, 
 strKey)</p>
<h3>Syntax</h3>
<p class="Code">Rhino.ViewDisplayModeProperty (strMode, strKey [, vaValue])</p>
<h3>Parameters</h3>
<table style="left: 0px; top: 152px;" cellspacing="0" width="100%">
	<col style="width: 9.209%;" />
	<col style="width: 90.791%;" />
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.209%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">strMode</p></td>
		<td style="width: 90.791%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Required. &#160;String. &#160;The name 
		 or identifier of the display mode obtained from the <a href="viewdisplaymodes.htm">ViewDisplayModes</a> 
		 method.</p></td>
	</tr>
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.209%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">strKey</p></td>
		<td style="width: 90.791%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Required. &#160;String. &#160;The display 
		 mode property key (see discussion above).</p></td>
	</tr>
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.209%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">vaValue</p></td>
		<td style="width: 90.791%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;String. &#160;The new value 
		 of the display mode property. Note, the data type must match. 
		 </p></td>
	</tr>
</table>
<h3>Returns</h3>
<table style="left: 0px; top: 152px;" cellspacing="0" width="100%">
	<col style="width: 9.341%;" />
	<col style="width: 90.659%;" />
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.341%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: normal;">Variant</p></td>
		<td style="width: 90.659%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">If <span style="font-style: italic;"><i>vaValue</i></span> 
		 is not specified, then the current value of the display mode property. 
		 The possible value types returned are as follows</p>
		<table style="border-collapse: separate;" cellspacing="0" width="100%">
			<col style="width: 12.448%;" />
			<col style="width: 87.552%;" />
			<tr>
				<td><p class="Table-Head">Type</p></td>
				<td><p class="Table-Head">Description</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">vbBoolean</p></td>
				<td><p class="Table-Body">True or False</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">vbInteger</p></td>
				<td><p class="Table-Body">An integer</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">vbLong</p></td>
				<td><p class="Table-Body">A long integer</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">vbDouble</p></td>
				<td><p class="Table-Body">A double-precision, floating-point 
				 number</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">vbString</p></td>
				<td><p class="Table-Body">A string</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">Color (vbLong)</p></td>
				<td><p class="Table-Body">An RGB color value</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">Point (vbArray)</p></td>
				<td><p class="Table-Body">A 3D point or 3D vector</p></td>
			</tr>
			<tr>
				<td><p class="Table-Body">Transform (vbArray)</p></td>
				<td><p class="Table-Body">A 4x4 transformation matrix</p></td>
			</tr>
		</table></td>
	</tr>
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.341%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: normal;">Variant</p></td>
		<td style="width: 90.659%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">If <span style="font-style: italic;"><i>vaValue</i></span> 
		 is specified, then the previous value of the display mode property.</p></td>
	</tr>
	<tr style="vertical-align: top; height: 20px;">
		<td style="width: 9.341%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: normal;">Null</p></td>
		<td style="width: 90.659%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">If not successful, or on error.</p></td>
	</tr>
</table>
<h3>Example</h3>
<p class="Code" style="margin-left: 12px;">Dim strKey, blnValue</p>
<p class="Code" style="margin-left: 12px;">strKey = &quot;Objects\Surfaces\ShowIsocurves&quot;</p>
<p class="Code" style="margin-left: 12px;">blnValue = Rhino.ViewDisplayModeProperty(&quot;Shaded&quot;, 
 strKey)</p>
<p class="Code" style="margin-left: 12px;">If blnValue = True Then</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;Call Rhino.ViewDisplayModeProperty(&quot;Shaded&quot;, 
 strKey, False)</p>
<p class="Code" style="margin-left: 12px;">End If</p>
<h3 class="code">Also See</h3>
<p><a href="viewdisplaymode.htm">ViewDisplayMode</a></p>
<p><a href="viewdisplaymodeex.htm">ViewDisplayModeEx</a></p>
<p><a href="viewdisplaymodes.htm">ViewDisplayModes</a></p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
