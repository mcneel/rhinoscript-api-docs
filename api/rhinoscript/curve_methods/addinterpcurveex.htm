<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>AddInterpCurveEx</title>
<link rel="StyleSheet" href="../rhinoscript.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.setRelStartPage)
	{
	addTocInfo("RhinoScript Methods\nCurve Methods\nAddInterpCurveEx");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../whd_show0.gif","../whd_show2.gif","../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../whd_hide0.gif","../whd_hide2.gif","../whd_hide1.gif");

	}

	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("../index.html", "", ">", "Home", "../title.htm");
document.write("<a href=\"../rhinoscript_methods.htm\">RhinoScript Methods<\/a> > <a href=\"curve_methods.htm\">Curve Methods<\/a> > AddInterpCurveEx<\/p>");


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.html");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
//]]></script>
</head>

<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<h1>AddInterpCurveEx</h1>
<p>Adds an interpolated curve object to &#160;the document similar to Rhino's 
 <span style="font-weight: bold;"><b>InterpCrv</b></span> command.</p>
<h3>Syntax</h3>
<p class="Code">Rhino.AddInterpCurveEx (arrPoints [, intDegree [, intKnotStyle 
 [, blnSharp [, arrStartTangent [, arrEndTangent]]]]])</p>
<h3>Parameters</h3>
<table cellspacing="0" width="100%">
	<col style="width: 8.991%;" />
	<col style="width: 91.009%;" />
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">arrPoints</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Required. &#160;Array. &#160;An array containing 
		 3-D points to interpolate. Note, the number of control points 
		 must be &gt;= (int<span style="font-style: italic;"><i>Degree</i></span>+1).</p></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">intDegree</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;Number. &#160;The degree 
		 of the curve. &#160;If omitted, degree = 3 is used. &#160;The 
		 degree of the curve must be &gt;=1. &#160;Periodic curves must 
		 have a degree &gt;= 2. &#160;For <span style="font-style: italic;"><i>intKnotStyle</i></span> 
		 = 1 or 2, the degree must be 3.</p></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">intKnotStyle</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;Number. The knot style, 
		 or spacing to use. &#160;If omitted, uniform knots (0) are created.</p>
		<table cellspacing="0" width="100%">
			<col style="width: 6.303%;" />
			<col style="width: 93.697%;" />
			<tr style="vertical-align: top;">
				<td style="width: 6.303%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body" style="font-weight: bold;">Value</p></td>
				<td style="width: 93.697%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body" style="font-weight: bold;">Description</p></td>
			</tr>
			<tr style="vertical-align: top;">
				<td style="width: 6.303%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">0</p></td>
				<td style="width: 93.697%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">Uniform spacing (k[i+1] - k[i] 
				 = 1). &#160;Parameter spacing between consecutive knots 
				 is 1.0. &#160;Use this when input points are evenly spaced.</p></td>
			</tr>
			<tr style="vertical-align: top;">
				<td style="width: 6.303%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">1</p></td>
				<td style="width: 93.697%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">Chord length spacing (k[i+1] - 
				 k[i] = |P[i-1] - P[i-2]|). &#160;Requires <span style="font-style: italic;"><i>intDegree 
				 </i></span>= 3. &#160;When in doubt, use this spacing.</p></td>
			</tr>
			<tr style="vertical-align: top;">
				<td style="width: 6.303%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">2</p></td>
				<td style="width: 93.697%; padding-right: 10px; padding-left: 10px;"><p 
					 class="Table-Body">Sqrt chord length spacing (k[i+1] 
				 - k[i] = sqrt(|P[i-1] - P[i-2]|). &#160;Requires <span 
				 style="font-style: italic;"><i>intDegree </i></span>= 3. &#160;Use 
				 with care, as it is easy to produce self-intersecting 
				 curves.</p></td>
			</tr>
		</table></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: italic;">blnSharp</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;Boolean. &#160;If True, 
		 when you create a closed curve, it will have a kink at the start/end 
		 point. If False (default), a smooth closure will be created.</p></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: normal;">arrStartTangent</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;Array. &#160;A 3-D vector 
		 that specifies a tangency condition at the beginning of the curve.</p></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 8.991%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body" style="font-style: normal;">arrEndTangent</p></td>
		<td style="width: 91.009%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Optional. &#160;Array. &#160;A 3-D vector 
		 that specifies a tangency condition at the end of the curve.</p></td>
	</tr>
</table>
<h3>Returns</h3>
<table cellspacing="0" width="100%">
	<col style="width: 9.007%;" />
	<col style="width: 90.993%;" />
	<tr style="vertical-align: top;">
		<td style="width: 9.007%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">String</p></td>
		<td style="width: 90.993%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">The identifier of the new object if successful.</p></td>
	</tr>
	<tr style="vertical-align: top;">
		<td style="width: 9.007%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">Null</p></td>
		<td style="width: 90.993%; padding-right: 10px; padding-left: 10px;"><p 
			 class="Table-Body">If not successful, or on error.</p></td>
	</tr>
</table>
<h3>Example</h3>
<p class="Code" style="margin-left: 12px;">Dim arrPoints</p>
<p class="Code" style="margin-left: 12px;">arrPoints = Rhino.GetPoints(True, 
 , &quot;Pick curve point&quot;)</p>
<p class="Code" style="margin-left: 12px;">If IsArray(arrPoints) Then</p>
<p class="Code" style="margin-left: 24px;">Rhino.AddInterpCurveEx arrPoints</p>
<p class="Code" style="margin-left: 12px;">End If</p>
<h3>Also See</h3>
<p><a href="addcurve.htm">AddCurve</a></p>
<p><a href="addinterpcurve.htm">AddInterpCurve</a></p>
<p><a href="curvepointcount.htm">CurvePointCount</a></p>
<p><a href="iscurve.htm">IsCurve</a></p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
