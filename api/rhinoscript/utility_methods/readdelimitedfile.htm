<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<title>ReadDelimitedFile</title>
<link rel="StyleSheet" href="../rhinoscript.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.setRelStartPage)
	{
	addTocInfo("RhinoScript Methods\nUtility Methods\nReadDelimitedFile");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../whd_show0.gif","../whd_show2.gif","../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../whd_hide0.gif","../whd_hide2.gif","../whd_hide1.gif");

	}

	document.write("<p style=\"text-align:right\"> ");
AddMasterBreadcrumbs("../index.html", "", ">", "Home", "../title.htm");
document.write("<a href=\"../rhinoscript_methods.htm\">RhinoScript Methods<\/a> > <a href=\"utility_methods.htm\">Utility Methods<\/a> > ReadDelimitedFile<\/p>");


	if (window.setRelStartPage)
	{
	setRelStartPage("../index.html");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
//]]></script>
</head>

<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
//]]></script>
<h1>ReadDelimitedFile</h1>
<p>Reads a delimited text file from disk. A delimited file is a specially 
 formatted text file which stores spreadsheet or database-style information 
 in a very simple format, with one row/record on each line, and each column/ 
 field within that row/record separated by a delimiter character. </p>
<p>Each row that is read from the file is split into a specified number 
 of columns based on the specified delimiter character. The columnar data 
 is then converted to the appropriate data type, either numbers or strings, 
 and added to an array that will eventually be returned. Empty or missing 
 columns will be represented as empty elements (vbEmpty) 
 in the array.</p>
<p>If each row contains a single column, then a one-dimensional array is 
 returned. If any row contain more than one column, then a two-dimensional 
 array will be returned, with the upper bounds of the second dimension 
 corresponding to the maximum number of columns found in the file.</p>
<p>ANSI, UTF-8 and Unicode encoded text files are supported.</p>
<h3>Syntax</h3>
<p class="Code">Rhino.ReadDelimitedFile (strFileName [, strDelimiter [, 
 blnIgnoreEmptyRows [, blnTrimSpaces]]])</p>
<h3>Parameters</h3>
<table cellspacing="0" width="100%">
	<col style="width: 11.29%;" />
	<col style="width: 88.71%;" />
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body" 
			 style="font-style: italic;">strFileName</p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Required. 
		 &#160;String. &#160;The name of an existing delimited text file 
		 to read. &#160;</p></td>
	</tr>
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body" 
			 style="font-style: italic;">strDelimiter</p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Optional. 
		 &#160;String. &#160;The file's delimiter character. If omitted, 
		 a comma character will be used.</p></td>
	</tr>
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body" 
			 style="font-style: italic;">blnIgnoreEmptyRows </p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Optional. 
		 &#160;Boolean. &#160;If omitted or False (Default), then if an 
		 empty row is encountered in the file, then an empty element (vbEmpty) 
		 for each column will be added to the array. If True, then empty 
		 line will be skipped.</p></td>
	</tr>
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body" 
			 style="font-style: italic;">blnTrimSpaces</p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Optional. 
		 &#160;Boolean. &#160;If omitted or False (Default), then leading 
		 and trailing spaces for string elements in the will not be trimmed. 
		 &#160;If True, then leading and trailing spaces will be trimmed.</p></td>
	</tr>
</table>
<h3>Returns</h3>
<table cellspacing="0" width="100%">
	<col style="width: 11.326%;" />
	<col style="width: 88.674%;" />
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Array</p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Either 
		 a one or two dimensional array, depending in the input delimited 
		 file, if successful.</p></td>
	</tr>
	<tr valign="top">
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">Null</p></td>
		<td style="padding-right: 10px; padding-left: 10px;"><p class="Table-Body">On 
		 error.</p></td>
	</tr>
</table>
<h3>Example</h3>
<p class="Code" style="margin-left: 12px;">Dim strFile, arrData, i, j</p>
<p class="Code" style="margin-left: 12px;">strFile = Rhino.OpenFileName(&quot;Open&quot;, 
 &quot;Comma Delimited (*.csv)|*.csv|All Files (*.*)|*.*||&quot;)</p>
<p class="Code" style="margin-left: 12px;">If Not IsNull(strFile) Then</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;arrData = Rhino.ReadDelimitedFile(strFile)</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;If IsArray(arrData) 
 Then</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;For 
 i = 0 To UBound(arrData,1)</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;For 
 j = 0 To UBound(arrData,2)</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;If 
 IsEmpty(arrData(i,j)) Then</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call 
 Rhino.Print(&quot;&lt;empty&gt;&quot;)</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Else</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Call 
 Rhino.Print(arrData(i,j))</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;End 
 If</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;&#160;&#160;Next</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;&#160;&#160;Next</p>
<p class="Code" style="margin-left: 12px;">&#160;&#160;End If</p>
<p class="Code">End If</p>
<h3 class="Code">Also See</h3>
<p><a href="readtextfile.htm">ReadTextFile</a></p>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);

highlightSearch();
//-->
//]]></script>
</body>
</html>
